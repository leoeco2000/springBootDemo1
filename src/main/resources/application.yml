spring:
  profiles:
    active: dev
#  datasource:
#    driver-class-name: com.mysql.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/springbootdemo1?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8
#    username: root
#    password: 123

#  redis:
#    #数据库索引
#    database: 0
#    host: 127.0.0.1
#    port: 6379
#    password: 123
#    jedis:
#      pool:
#        #最大连接数
#        max-active: 8
#        #最大阻塞等待时间(负数表示没限制)
#        max-wait: -1
#        #最大空闲
#        max-idle: 8
#        #最小空闲
#        min-idle: 0
#    #连接超时时间
#    timeout: 10000


    # 使用druid数据源
  datasource:
    name: mysql_test
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filters: stat
      driver-class-name: com.mysql.jdbc.Driver
      #基本属性
      url: jdbc:mysql://localhost:3306/springbootdemo1?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
      username: root
      password: 123
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20

#  jpa:
#    hibernate:
#      ddl-auto: update  # 第一次简表create  后面用update
#    show-sql: true

mybatis:
  mapper-locations: classpath:com/example/demo/mapper/*.xml
  type-aliases-package: com.example.demo.entity

#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

my:
  name: forezp
  age: 12
  number:  ${random.int}
  uuid : ${random.uuid}
  max: ${random.int(10)}
  value: ${random.value}
  greeting: hi,i'm  ${my.name}

